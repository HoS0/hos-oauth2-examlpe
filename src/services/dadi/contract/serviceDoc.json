{
    "swagger": "2.0",
    "info": {
        "version": "0.1.0",
        "title": "dadi service",
        "description": "dadi service"
    },
    "host": "test.com",
    "basePath": "/dadi",
    "schemes": [
        "http",
        "https"
    ],
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "paths": {
        "/brand": {
            "post": {
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Brand"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "in case the object is saved"
                    }
                }
            },
            "get": {
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "brand name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "object of the requested Brand",
                        "schema": {
                            "$ref": "#/definitions/Brand"
                        }
                    }
                }
            }
        },
        "/brand/{id}": {
            "get": {
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Brand Id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "object of the requested Brand",
                        "schema": {
                            "$ref": "#/definitions/Brand"
                        }
                    }
                }
            },
            "delete": {
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Brand Id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "in case the token has removed"
                    }
                }
            }
        },
        "/story": {
            "post": {
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Story"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "in case the object is saved"
                    }
                }
            }
        },
        "/story/{id}": {
            "get": {
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Story Id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "object of the requested Story",
                        "schema": {
                            "$ref": "#/definitions/Story"
                        }
                    }
                }
            },
            "delete": {
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Story Id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "in case the token has removed"
                    }
                }
            }
        },
        "/thread": {
            "post": {
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Thread"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "in case the object is saved"
                    }
                }
            }
        },
        "/thread/{id}": {
            "get": {
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Thread Id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "object of the requested Thread",
                        "schema": {
                            "$ref": "#/definitions/Thread"
                        }
                    }
                }
            },
            "delete": {
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Thread Id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "in case the token has removed"
                    }
                }
            }
        },
        "/episode": {
            "post": {
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Episode"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "in case the object is saved"
                    }
                }
            }
        },
        "/episode/{id}": {
            "get": {
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Episode Id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "object of the requested Episode",
                        "schema": {
                            "$ref": "#/definitions/Episode"
                        }
                    }
                }
            },
            "delete": {
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Episode Id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "in case the token has removed"
                    }
                }
            }
        }
    },
    "definitions": {
        "Brand": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "stories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Story"
                    }
                }
            }
        },
        "Story": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "brandId": {
                    "type": "string"
                },
                "threads": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Thread"
                    }
                }
            }
        },
        "Thread": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "storyId": {
                    "type": "string"
                },
                "episodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Episode"
                    }
                }
            }
        },
        "Episode": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "threadId": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                }
            }
        }
    }
}
